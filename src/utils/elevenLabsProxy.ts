/**
 * ElevenLabs SDK Proxy - Monkey-patch –¥–ª—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞ —á–µ—Ä–µ–∑ backend
 * 
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ ElevenLabs API –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –∏—Ö
 * —á–µ—Ä–µ–∑ –≤–∞—à backend-–ø—Ä–æ–∫—Å–∏, —á—Ç–æ–±—ã –Ω–µ —Å–≤–µ—Ç–∏—Ç—å API-–∫–ª—é—á –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ.
 */

interface ProxyConfig {
  backendUrl: string;
  originalElevenLabsUrl: string;
  apiKey?: string; // API-–∫–ª—é—á –¥–ª—è backend (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω)
}

class ElevenLabsProxy {
  private config: ProxyConfig;
  private originalFetch!: typeof fetch;
  private originalWebSocket!: typeof WebSocket;
  private isPatched = false;

  constructor(config: ProxyConfig) {
    this.config = {
      backendUrl: config.backendUrl.replace(/\/$/, ''), // –£–±–∏—Ä–∞–µ–º trailing slash
      originalElevenLabsUrl: config.originalElevenLabsUrl || 'https://api.elevenlabs.io',
      apiKey: config.apiKey
    };
  }

  /**
   * –ü—Ä–∏–º–µ–Ω—è–µ—Ç monkey-patch –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –≤—Å–µ—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π –∫ ElevenLabs
   */
  patch(): void {
    if (this.isPatched) {
      console.warn('ElevenLabs proxy already patched');
      return;
    }

    console.log('üîß Applying ElevenLabs proxy patch...');
    console.log(`Backend URL: ${this.config.backendUrl}`);
    console.log(`Original ElevenLabs URL: ${this.config.originalElevenLabsUrl}`);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    this.originalFetch = window.fetch;
    this.originalWebSocket = window.WebSocket;

    // –ü–∞—Ç—á–∏–º fetch
    this.patchFetch();
    
    // –ü–∞—Ç—á–∏–º WebSocket
    this.patchWebSocket();

    this.isPatched = true;
    console.log('‚úÖ ElevenLabs proxy patch applied successfully');
  }

  /**
   * –£–±–∏—Ä–∞–µ—Ç monkey-patch
   */
  unpatch(): void {
    if (!this.isPatched) {
      console.warn('ElevenLabs proxy not patched');
      return;
    }

    console.log('üîß Removing ElevenLabs proxy patch...');

    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    window.fetch = this.originalFetch;
    window.WebSocket = this.originalWebSocket;

    this.isPatched = false;
    console.log('‚úÖ ElevenLabs proxy patch removed');
  }

  /**
   * –ü–∞—Ç—á–∏—Ç fetch –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ REST API –∑–∞–ø—Ä–æ—Å–æ–≤
   */
  private patchFetch(): void {
    const self = this;
    
    window.fetch = async function(input: RequestInfo | URL, init?: RequestInit): Promise<Response> {
      const url = typeof input === 'string' ? input : input.toString();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –∑–∞–ø—Ä–æ—Å–æ–º –∫ ElevenLabs
      if (self.shouldProxy(url)) {
        console.log(`üîÑ Proxying fetch request: ${url}`);
        
        // –ó–∞–º–µ–Ω—è–µ–º URL –Ω–∞ –Ω–∞—à backend
        const proxiedUrl = self.proxyUrl(url);
        console.log(`üì° Proxied to: ${proxiedUrl}`);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ø—Ä–æ–∫—Å–∏
        const proxiedInit = self.prepareProxiedRequest(init);
        
        // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π fetch
        return self.originalFetch(proxiedUrl, proxiedInit);
      }
      
      // –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π fetch
      return self.originalFetch(input, init);
    };
  }

  /**
   * –ü–∞—Ç—á–∏—Ç WebSocket –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ real-time —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
   */
  private patchWebSocket(): void {
    const self = this;
    const OriginalWebSocket = this.originalWebSocket;
    
    // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä WebSocket
    function ProxiedWebSocket(url: string, protocols?: string | string[]) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º —Å ElevenLabs
      if (self.shouldProxy(url)) {
        console.log(`üîÑ Proxying WebSocket connection: ${url}`);
        
        // –ó–∞–º–µ–Ω—è–µ–º URL –Ω–∞ –Ω–∞—à backend
        const proxiedUrl = self.proxyWebSocketUrl(url);
        console.log(`üì° Proxied WebSocket to: ${proxiedUrl}`);
        
        // –°–æ–∑–¥–∞—ë–º WebSocket —Å –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º URL
        return new OriginalWebSocket(proxiedUrl, protocols);
      }
      
      // –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö WebSocket –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
      return new OriginalWebSocket(url, protocols);
    }
    
    // –ö–æ–ø–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞
    ProxiedWebSocket.CONNECTING = OriginalWebSocket.CONNECTING;
    ProxiedWebSocket.OPEN = OriginalWebSocket.OPEN;
    ProxiedWebSocket.CLOSING = OriginalWebSocket.CLOSING;
    ProxiedWebSocket.CLOSED = OriginalWebSocket.CLOSED;
    
    // –ó–∞–º–µ–Ω—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π WebSocket
    window.WebSocket = ProxiedWebSocket as unknown as typeof WebSocket;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞—Ç—å URL
   */
  private shouldProxy(url: string): boolean {
    return url.includes(this.config.originalElevenLabsUrl) || 
           url.includes('elevenlabs.io') ||
           url.includes('api.elevenlabs.io');
  }

  /**
   * –ó–∞–º–µ–Ω—è–µ—Ç URL ElevenLabs –Ω–∞ URL –≤–∞—à–µ–≥–æ backend
   */
  private proxyUrl(originalUrl: string): string {
    return originalUrl.replace(
      this.config.originalElevenLabsUrl,
      `${this.config.backendUrl}/elevenlabs-proxy`
    );
  }

  /**
   * –ó–∞–º–µ–Ω—è–µ—Ç WebSocket URL ElevenLabs –Ω–∞ URL –≤–∞—à–µ–≥–æ backend
   */
  private proxyWebSocketUrl(originalUrl: string): string {
    // WebSocket URL –æ–±—ã—á–Ω–æ –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ wss://api.elevenlabs.io/...
    return originalUrl.replace(
      'wss://api.elevenlabs.io',
      `${this.config.backendUrl.replace('https://', 'wss://').replace('http://', 'ws://')}/elevenlabs-proxy/ws`
    );
  }

  /**
   * –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–∫—Å–∏ (–¥–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏, API-–∫–ª—é—á –∏ —Ç.–¥.)
   */
  private prepareProxiedRequest(init?: RequestInit): RequestInit {
    const proxiedInit = { ...init };
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ø—Ä–æ–∫—Å–∏
    const headers = new Headers(init?.headers);
    
    // –ï—Å–ª–∏ —É –Ω–∞—Å –µ—Å—Ç—å API-–∫–ª—é—á –¥–ª—è backend, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
    if (this.config.apiKey) {
      headers.set('X-Backend-API-Key', this.config.apiKey);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫, —á—Ç–æ–±—ã backend –∑–Ω–∞–ª, —á—Ç–æ —ç—Ç–æ –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
    headers.set('X-ElevenLabs-Proxy', 'true');
    
    // –î–æ–±–∞–≤–ª—è–µ–º CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    headers.set('X-Requested-With', 'XMLHttpRequest');
    
    proxiedInit.headers = headers;
    
    return proxiedInit;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø—Ä–∏–º–µ–Ω—ë–Ω –ª–∏ –ø–∞—Ç—á
   */
  isPatchedApplied(): boolean {
    return this.isPatched;
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
   */
  getConfig(): ProxyConfig {
    return { ...this.config };
  }
}

// –°–æ–∑–¥–∞—ë–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–æ–∫—Å–∏
let globalProxy: ElevenLabsProxy | null = null;

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏ –ø—Ä–∏–º–µ–Ω—è–µ—Ç ElevenLabs –ø—Ä–æ–∫—Å–∏
 */
export function initElevenLabsProxy(config: ProxyConfig): ElevenLabsProxy {
  if (globalProxy) {
    console.warn('ElevenLabs proxy already initialized');
    return globalProxy;
  }

  globalProxy = new ElevenLabsProxy(config);
  globalProxy.patch();
  
  return globalProxy;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–æ–∫—Å–∏
 */
export function getElevenLabsProxy(): ElevenLabsProxy | null {
  return globalProxy;
}

/**
 * –£–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–∫—Å–∏
 */
export function removeElevenLabsProxy(): void {
  if (globalProxy) {
    globalProxy.unpatch();
    globalProxy = null;
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø—Ä–æ–∫—Å–∏
 */
export function isElevenLabsProxyInitialized(): boolean {
  return globalProxy !== null && globalProxy.isPatchedApplied();
}

export default ElevenLabsProxy; 