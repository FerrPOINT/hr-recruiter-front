import React, { useState } from 'react';
import { usePagesStore } from '../store/pagesStore';

interface LeftPanelProps {
  width: number;
  onWidthChange: (width: number) => void;
}

const COMPONENT_TYPES = [
  // –û—Å–Ω–æ–≤–Ω—ã–µ –≤–∏–¥–∂–µ—Ç—ã
  {
    type: 'dashboard',
    name: '–î–∞—à–±–æ—Ä–¥',
    icon: 'üìä',
    category: '–û—Å–Ω–æ–≤–Ω—ã–µ',
    description: '–û–±–∑–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏',
    defaultProps: {
      showStats: true,
      showRecentInterviews: true,
      showActivePositions: true,
    },
  },
  {
    type: 'vacancyList',
    name: '–°–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π',
    icon: 'üíº',
    category: '–û—Å–Ω–æ–≤–Ω—ã–µ',
    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏—è–º–∏ –∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞–º–∏',
    defaultProps: {
      showSearch: true,
      showFilters: true,
      maxItems: 10,
      width: 800,
      height: 1000,
    },
  },
  {
    type: 'interviewList',
    name: '–°–ø–∏—Å–æ–∫ –∏–Ω—Ç–µ—Ä–≤—å—é',
    icon: 'üé§',
    category: '–û—Å–Ω–æ–≤–Ω—ã–µ',
    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤—å—é –∏ —Å–µ—Å—Å–∏—è–º–∏',
    defaultProps: {
      showSearch: true,
      showFilters: true,
      maxItems: 10,
    },
  },
  {
    type: 'candidates',
    name: '–ö–∞–Ω–¥–∏–¥–∞—Ç—ã',
    icon: 'üë§',
    category: '–û—Å–Ω–æ–≤–Ω—ã–µ',
    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞–º–∏ –∏ –∏—Ö —Å—Ç–∞—Ç—É—Å–∞–º–∏',
    defaultProps: {
      showSearch: true,
      showFilters: true,
      maxCandidates: 10,
    },
  },
  
  // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –æ—Ç—á–µ—Ç—ã
  {
    type: 'stats',
    name: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
    icon: 'üìà',
    category: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
    description: '–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –∏ –º–µ—Ç—Ä–∏–∫–∏',
    defaultProps: {
      showCards: true,
      showCharts: true,
      showTrends: true,
    },
  },
  {
    type: 'reports',
    name: '–û—Ç—á–µ—Ç—ã',
    icon: 'üìã',
    category: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
    description: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞–º–∏',
    defaultProps: {
      showFilters: true,
      showActions: true,
      maxReports: 10,
    },
  },
  {
    type: 'interview-report',
    name: '–û—Ç—á–µ—Ç –ø–æ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è–º',
    icon: 'üìä',
    category: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
    description: '–ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ –≤—Å–µ–º —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è–º —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π',
    defaultProps: {
      showFilters: true,
      showAnalytics: true,
      showDetailedTable: true,
      width: 1200,
      height: 800,
    },
  },
  
  // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
  {
    type: 'questions',
    name: '–í–æ–ø—Ä–æ—Å—ã –∏–Ω—Ç–µ—Ä–≤—å—é',
    icon: '‚ùì',
    category: '–ö–æ–Ω—Ç–µ–Ω—Ç',
    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –¥–ª—è –∏–Ω—Ç–µ—Ä–≤—å—é',
    defaultProps: {
      showSearch: true,
      showFilters: true,
      maxQuestions: 10,
    },
  },
  {
    type: 'calendar',
    name: '–ö–∞–ª–µ–Ω–¥–∞—Ä—å –∏–Ω—Ç–µ—Ä–≤—å—é',
    icon: 'üìÖ',
    category: '–ö–æ–Ω—Ç–µ–Ω—Ç',
    description: '–ö–∞–ª–µ–Ω–¥–∞—Ä—å –∏–Ω—Ç–µ—Ä–≤—å—é –∏ —Å–æ–±—ã—Ç–∏–π',
    defaultProps: {
      showMonth: true,
      showWeek: true,
      showList: true,
    },
  },
  {
    type: 'learn',
    name: '–û–±—É—á–µ–Ω–∏–µ',
    icon: 'üìö',
    category: '–ö–æ–Ω—Ç–µ–Ω—Ç',
    description: '–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –æ–±—É—á–µ–Ω–∏—è',
    defaultProps: {},
  },
  
  // –ö–æ–º–∞–Ω–¥–∞ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  {
    type: 'team',
    name: '–ö–æ–º–∞–Ω–¥–∞',
    icon: 'üë•',
    category: '–ö–æ–º–∞–Ω–¥–∞',
    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –∫–æ–º–∞–Ω–¥—ã',
    defaultProps: {
      showRoles: true,
      showStats: true,
      maxMembers: 10,
    },
  },
  {
    type: 'notifications',
    name: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
    icon: 'üîî',
    category: '–ö–æ–º–∞–Ω–¥–∞',
    description: '–°–∏—Å—Ç–µ–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ —Å–æ–±—ã—Ç–∏—è',
    defaultProps: {
      showFilters: true,
      showActions: true,
      maxNotifications: 20,
    },
  },
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
  {
    type: 'account',
    name: '–ê–∫–∫–∞—É–Ω—Ç',
    icon: 'üë§',
    category: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
    description: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è',
    defaultProps: {},
  },
  {
    type: 'branding',
    name: '–ë—Ä–µ–Ω–¥–∏–Ω–≥',
    icon: 'üé®',
    category: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
    description: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—Ä–µ–Ω–¥–∏–Ω–≥–∞',
    defaultProps: {},
  },
  {
    type: 'tariffs',
    name: '–¢–∞—Ä–∏—Ñ—ã',
    icon: 'üí∞',
    category: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞–º–∏',
    defaultProps: {},
  },
  {
    type: 'archive',
    name: '–ê—Ä—Ö–∏–≤',
    icon: 'üìÅ',
    category: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
    description: '–ê—Ä—Ö–∏–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ',
    defaultProps: {},
  },
];

// –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
const groupComponentsByCategory = (components: typeof COMPONENT_TYPES) => {
  const grouped = components.reduce((acc, component) => {
    if (!acc[component.category]) {
      acc[component.category] = [];
    }
    acc[component.category].push(component);
    return acc;
  }, {} as Record<string, typeof COMPONENT_TYPES>);
  
  return grouped;
};

export const LeftPanel: React.FC<LeftPanelProps> = ({ width, onWidthChange }) => {
  const [isResizing, setIsResizing] = useState(false);
  const [searchTerm, setSearchTerm] = useState('');
  const [expandedCategories, setExpandedCategories] = useState<string[]>(['–û—Å–Ω–æ–≤–Ω—ã–µ']);

  const handleMouseDown = (e: React.MouseEvent) => {
    setIsResizing(true);
    e.preventDefault();
  };

  const handleMouseMove = (e: MouseEvent) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–±—ã—Ç–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤–Ω—É—Ç—Ä–∏ –ª–µ–≤–æ–π –ø–∞–Ω–µ–ª–∏
    const leftPanel = document.querySelector('.left-panel');
    if (!leftPanel || !leftPanel.contains(e.target as Node)) {
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ —Ñ–æ–∫—É—Å –≤ –∏–Ω–ø—É—Ç–µ
    const activeElement = document.activeElement;
    if (activeElement && (activeElement.tagName === 'INPUT' || activeElement.tagName === 'TEXTAREA' || activeElement.tagName === 'SELECT')) {
      return;
    }
    
    if (isResizing) {
      const newWidth = e.clientX;
      if (newWidth > 200 && newWidth < 400) {
        onWidthChange(newWidth);
      }
    }
  };

  const handleMouseUp = () => {
    setIsResizing(false);
  };

  React.useEffect(() => {
    if (isResizing) {
      document.addEventListener('mousemove', handleMouseMove);
      document.addEventListener('mouseup', handleMouseUp);
      return () => {
        document.removeEventListener('mousemove', handleMouseMove);
        document.removeEventListener('mouseup', handleMouseUp);
      };
    }
  }, [isResizing]);

  const handleComponentDragStart = (e: React.DragEvent, componentType: typeof COMPONENT_TYPES[0]) => {
    console.log('Starting drag for component:', componentType);
    const dragData = {
      type: componentType.type,
      defaultProps: componentType.defaultProps,
    };
    console.log('Setting drag data:', dragData);
    e.dataTransfer.setData('application/json', JSON.stringify(dragData));
    e.dataTransfer.effectAllowed = 'copy';
  };

  const toggleCategory = (category: string) => {
    setExpandedCategories(prev => 
      prev.includes(category) 
        ? prev.filter(c => c !== category)
        : [...prev, category]
    );
  };

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø–æ –ø–æ–∏—Å–∫—É
  const filteredComponents = COMPONENT_TYPES.filter(component =>
    component.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
    component.description.toLowerCase().includes(searchTerm.toLowerCase()) ||
    component.category.toLowerCase().includes(searchTerm.toLowerCase())
  );

  const groupedComponents = groupComponentsByCategory(filteredComponents);

  return (
    <div 
      className="left-panel bg-gray-50 border-r border-gray-200 flex flex-col h-full transition-all duration-500 ease-[cubic-bezier(0.4,0,0.2,1)] animate-fade-in overflow-auto"
      style={{ width: `${width}px` }}
    >
      {/* Components Section */}
      <div className="p-2">
        <h3 className="text-xs font-medium text-gray-700 mb-2">–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã</h3>
        
        {/* Search */}
        <div className="mb-2">
          <input
            type="text"
            placeholder="–ü–æ–∏—Å–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="w-full px-2 py-1 text-xs border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
          />
        </div>

        {/* Accordion */}
        <div className="space-y-1">
          {Object.entries(groupedComponents).map(([category, components]) => (
            <div key={category} className="border border-gray-200 rounded overflow-hidden">
              {/* Category Header */}
              <button
                onClick={() => toggleCategory(category)}
                className="w-full px-2 py-1 bg-white hover:bg-gray-50 flex items-center justify-between text-xs font-medium text-gray-700 border-b border-gray-200 transition-colors"
              >
                <span>{category}</span>
                <span className={`transform transition-transform ${expandedCategories.includes(category) ? 'rotate-180' : ''} text-[10px]`}>
                  ‚ñº
                </span>
              </button>
              
              {/* Category Content */}
              {expandedCategories.includes(category) && (
                <div className="bg-gray-50">
                  {components.map((component) => (
                    <div
                      key={component.type}
                      draggable
                      onDragStart={(e) => handleComponentDragStart(e, component)}
                      className="flex items-center space-x-2 p-2 bg-white border-b border-gray-100 cursor-move hover:bg-blue-50 hover:border-blue-200 transition-all text-xs last:border-b-0"
                    >
                      <span className="text-sm" style={{ fontSize: '16px' }}>{component.icon}</span>
                      <div className="flex-1 min-w-0">
                        <div className="font-medium text-gray-700 truncate text-xs" style={{ fontSize: '12px' }}>{component.name}</div>
                        <div className="text-[10px] text-gray-500 truncate" style={{ fontSize: '10px' }}>{component.description}</div>
                      </div>
                    </div>
                  ))}
                </div>
              )}
            </div>
          ))}
        </div>
      </div>

      {/* Resize Handle */}
      <div
        className="absolute right-0 top-0 bottom-0 w-1 cursor-col-resize hover:bg-blue-500"
        onMouseDown={handleMouseDown}
      />
    </div>
  );
}; 